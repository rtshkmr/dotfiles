# dotfiles
* Dotfiles
This is a quick and dirty way to organise my dotfiles.

** Current Doom Info
#+begin_src bash
generated  Aug 30, 2024 10:49:06
system     MacOS 14.6.1 Darwin 23.6.0 arm64
emacs      29.1 EMACSDIR=~/.config/emacs/
	   EMACS=/opt/homebrew/Cellar/emacs-mac/emacs-29.1-mac-10.0/Emacs.app/Contents/MacOS/Emacs
doom       3.0.0-pre PROFILE=_@0 grafted, HEAD -> master, origin/master,
	   origin/HEAD 9620bb4 2024-04-18 14:20:48 -0400 ~/.config/doom/
shell      /bin/zsh
features   ACL DBUS GLIB GMP GNUTLS JSON LCMS2 LIBXML2 MODULES
	   NATIVE_COMP NOTIFY KQUEUE PDUMPER RSVG SQLITE3 THREADS
	   TOOLKIT_SCROLL_BARS TREE_SITTER WEBP XIM XWIDGETS ZLIB
traits     batch server-running envvar-file custom-file
modules    :config use-package :completion (corfu +icons +dabbrev
	   +orderless) (ivy +childframe +fuzzy +icons +prescient) :ui
	   deft doom doom-dashboard doom-quit (emoji +ascii +github
	   +unicode) hl-todo indent-guides (ligatures +extra) modeline
	   nav-flash ophints (popup +all +defaults) (treemacs +lsp)
	   unicode (vc-gutter +pretty +diff-hl) vi-tilde-fringe
	   (window-select +numbers) workspaces zen :editor (evil
	   +everywhere) file-templates fold (format +onsave) snippets
	   word-wrap :emacs (dired +ranger +icons) electric (ibuffer
	   +icons) undo vc :term vterm :checkers (syntax +childframe)
	   (spell +flyspell) grammar :tools (debugger +lsp) (docker
	   +lsp) editorconfig ein (eval +overlay) (lookup +dictionary
	   +offline +docsets) (lsp +peek) (magit +forge) pdf rgb
	   tree-sitter :os macos (tty +osc) :lang (cc +lsp +tree-sitter)
	   data (elixir +lsp +tree-sitter) emacs-lisp (erlang +lsp
	   +tree-sitter) (go +lsp +tree-sitter) (graphql +lsp) (json
	   +lsp +tree-sitter) (java +tree-sitter +lsp) (javascript +lsp
	   +tree-sitter) (latex +lsp +fold +cdlatex +latexmk) (markdown
	   +grip) (nix +tree-sitter +lsp) (org +dragndrop +gnuplot +hugo
	   +journal +jupyter +noter +pandoc +pomodoro +present +pretty)
	   (python +lsp +pyright +tree-sitter +cython +poetry) (sh +lsp
	   +tree-sitter) (web +lsp +tree-sitter) (yaml +lsp
	   +tree-sitter) :app calendar everywhere :config (default
	   +bindings +smartparens)
packages   (hl-todo) (blamer) (magit-todos) (magit-todos) (circadian)
#+end_src

** MacOS Specific
*** TODO Creating launchd service for emacs-daemon
Motivation:
I'm on MacOS now and am running emacs that on the doom starter pack.
My workflows involve creating frames for discrete contexts instead of just using the workspaces feature. This allows me to put windows in different virtual desktop for separating out these contexts and aiding my context-switching.

I would really like to setup emacsclient properly here, but the available info seems outdated on how to do so. Current [[https://www.emacswiki.org/emacs/EmacsAsDaemon#h5o-11][emacswiki entry]] on the daemon.

[[https://systemcrafters.net/emacs-tips/using-the-emacs-daemon/][Systemcrafter's blog post]] might be useful as well.

- [[https://web.archive.org/web/20091207041756/http://cubiclemuses.com/cm/articles/2009/08/06/emacs-and-os-x-launchd][ref]]
  Also, launchctl has changed, see [[https://gist.github.com/masklinn/a532dfe55bdeab3d60ab8e46ccc38a68][this gist]] to understand instead:

  #+begin_src bash
# validate plist file using this:
# plutil -lint /path/to/your/plist/file.plist
plutil -lint /Library/LaunchAgents/gnu.emacs.daemon.plist
  #+end_src

  #+begin_src bash
# launchctl has new syntax for loading plist
# sudo launchctl bootstrap system /Library/LaunchDaemons/com.example.service.plist

sudo launchctl bootstrap system  /Library/LaunchAgents/gnu.emacs.daemon.plist
  #+end_src

** Another
